
CS 6301.{013,016}: Implementation of advanced DS&A
Project 10 (Type 1)  [optional]

Max score: 200 + 1.5 EC.

Ver 1.0: Sat, Nov 8: Initial description.
Ver 2.0: Wed, Dec 3: Deadline changed to Dec 15.  No second deadline.
Ver 2.1: Sun, Dec 6: In Step 5, the matching is added to the MST T, and not G.

Code base: Any data structures (built-in or downloaded), graph class and
graph algorithms BFS and DFS.  Do not download code for maximum flows, 
matching, or shortest paths.

Deadlines: 2 AM on Monday: Dec 15 (1st) [no submission accepted after 1st deadline].
No documentation: -20.  Not as per i/o specification: -20.


Implement the following heuristic (sometimes known as Christofides algorithm)
for the travelling salesman problem.  The input is an undirected graph G=(V,E)
with edge weights.  Edges will be given in non-decreasing order of weights.

1. Find a minimum spanning tree of the given graph, using Kruskal's algorithm.
   The input edges are given in sorted order of weight.  Do not change this
   order.  Let the MST be tree T.

2. Find the nodes of the graph that have odd degree in T.  Let this set be S.

3. Find all-pairs shortest paths in G.  Create a complete graph K on the
   nodes of S, with w(u,v) = weight of shortest path from u to v in G.

4. Find a minimum-weight perfect matching M in K.

5. Each edge in M corresponds to a shortest path in G.
   Add to T the paths corresponding to the edges of M in G,
   resulting in a multi-graph H.

6. Find an Euler tour of H and output this tour.


Input specification:
The input is taken from stdin (standard input), and contains a sequence of
lines.  The first line of input has 2 integers, |V|, and, |E|.  The next
|E| lines of input have 3 integers in each line: u,v,w, indicating an edge
(u,v) of weight w.  
Limits: |V| is between 3 and 1,000.  |E| is at most 10,000.

Output specification:
The first line of output has the weight of T, the weight of M, and the weight
of the TSP tour found by the algorithm, along with the RT in msec.
In the next line, output the sequence of nodes visited by the TSP tour
found by the algorithm


Sample input:
4 5
1 4 2
2 4 2
3 4 2
1 2 6
2 3 6

Output:
6 6 12 <msec>
1 4 2 4 3 4 1

Explanation:
The MST found is (1,4), (2,4) and (3,4), which has a total weight of 6.
All nodes have odd degree.  A complete graph on 4 nodes is created
with the following weights:
w(1,2) = 4  [shortest path is 1-4-2]
w(1,3) = 4  [1-4-3]
w(1,4) = 2  [1-4]
w(2,3) = 4  [2-4-3]
w(2,4) = 2  [2-4]
w(3,4) = 2  [3-4]
A minimum-weight matching in this graph has weight 6: (1,2) and (3,4).
These correspond to shortest paths: 1-4-2 and 3-4.  Adding these edges
to T gives the following multigraph: (1,4) (2,4) (3,4) (1,4) (2,4) (3,4). 
An Euler tour in this graph is 1-4-2-4-3-4-1.  Note: There are other
solutions with the same weight.
